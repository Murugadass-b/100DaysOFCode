public class SinglyLinkedList{
    private ListNode head;
    private class ListNode{
        private int data;
        private ListNode next;
        private ListNode(int data){
            this.data = data;
            this.next = null;
        }
    }
    
    public void insert(int value){
        if(head == null){
            head = new ListNode(value);
        }else{
            ListNode newNode = new ListNode(value);
            ListNode current = head;
            while(current.next !=null){
                current = current.next;
            }
            current.next = newNode;
        }
        
    }
    
    public void display(){
        ListNode current = head;
        while(current != null){
            System.out.print(current.data+" --> ");
            current = current.next;
        }
        System.out.println("null");
    }
    //n=3
    //1 2 3 4 5 6 7 9
    //          > 
    public int findNthLast(int n){
        ListNode mainPtr = head;
        ListNode refPtr = head;
        int c =0;
        while(c<n){
            refPtr = refPtr.next;
            c++;
        }
        while(refPtr != null){
            mainPtr = mainPtr.next;
            refPtr = refPtr.next;
        }
        return mainPtr.data;
    }
    public static void main(String args[]){
        SinglyLinkedList sll = new SinglyLinkedList();
        sll.insert(12);
        sll.insert(43);
        sll.insert(89);
        sll.insert(478);
        sll.display();
        System.out.println(sll.findNthLast(1));
    }
}
