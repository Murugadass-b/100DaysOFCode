import java.util.*;
public class Tree{
    private TreeNode root;
    static class TreeNode{
        private TreeNode right;
        private TreeNode left;
        private int data;
        public TreeNode(int data){
            this.data = data;
            this.right = null;
            this.left = null;
        }
    }
    public void createBinaryTree(){
        TreeNode first = new TreeNode(7);
        TreeNode second = new TreeNode(5);
        TreeNode third = new TreeNode(6);
        TreeNode fourth = new TreeNode(1);
        TreeNode fifth = new TreeNode(2);
        TreeNode sixth = new TreeNode(3);
        TreeNode seventh = new TreeNode(4);
        root = first;//                     7
        root.left = second;//            5       6
        root.right = third;//         1    2  3     4  
        second.left = fourth;
        second.right = fifth;
        third.left = sixth;
        third.right = seventh;
    }
    
    public void iterativePreorder(TreeNode root){
        if(root == null){
            return;
        }
        Stack<TreeNode> stack = new Stack<>();
        stack.push(root);
        while(!stack.isEmpty()){
            TreeNode temp = stack.pop();
            System.out.print(temp.data+" ");
            if(temp.right!=null){
                stack.push(temp.right);
            }
            if(temp.left != null){
                stack.push(temp.left);
            }
        }
    }
    
    public static void main(String args[]){
        Tree tr = new Tree();
        tr.createBinaryTree();
        tr.iterativePreorder(tr.root);
    }
}
