
import java.util.*;
public class Tree{
    private TreeNode root;
    public class TreeNode{
        private TreeNode right;
        private TreeNode left;
        private int data;
        public TreeNode(int data){
            this.data = data;
            this.right = null;
            this.left = null;
        }
    }
    public void createTree(){
        TreeNode first = new TreeNode(6);
        TreeNode second = new TreeNode(3);
        TreeNode third = new TreeNode(4);
        TreeNode fourth = new TreeNode(1);
        TreeNode fifth = new TreeNode(2);
        TreeNode sixth = new TreeNode(8);
        TreeNode seventh = new TreeNode(5);
        root = first;//                                 6
        root.left = second;//                   3               4
        root.right = third;//               1       2       8       5
        second.left = fourth;
        second.right = fifth;
        third.left = sixth;
        third.right = seventh;
    }
    
    public void iterativePostOrder(){
        TreeNode current = root;
        Stack<TreeNode> stack = new Stack<>();
        while(current!=null || !stack.isEmpty()){
            if(current != null){
                stack.push(current);
                current = current.left;
            }else{
                TreeNode temp = stack.peek().right;
                if(temp==null){
                    temp = stack.pop();
                    System.out.print(temp.data+" ");
                    while(!stack.isEmpty() && temp==stack.peek().right){
                        temp = stack.pop();
                        System.out.print(temp.data+" ");
                    }
                }else{
                    current = temp;
                }
            }
        }
    }
    
    public static void main(String args[]){
        Tree tr = new Tree();
        tr.createTree();
        tr.iterativePostOrder();
    }
}
