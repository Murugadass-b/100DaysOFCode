
import java.util.*;
public class BinarySearchTree{
    private TreeNode root;
    public class TreeNode{
        private TreeNode right;
        private TreeNode left;
        private int data;
        public TreeNode(int data){
            this.data = data;
        }
    }
    
    public void insert(int value){
        root = insert(root,value);
    }
    
    
    public TreeNode insert(TreeNode root,int value){
        if(root == null){
            root = new TreeNode(value);
            return root;
        }
        if(value<root.data){
            root.left = insert(root.left,value);
        }
        else{
            root.right = insert(root.right,value);
        }
        return root;
    }
    
    public void inOrder(){
        inOrder(root);
    }
    public void inOrder(TreeNode root){
        if(root == null){
            return;
        }
        inOrder(root.left);
        System.out.print(root.data+" ");
        inOrder(root.right);
    }
    
    public TreeNode search(int key){
        return search(root,key);
    }
    
    public TreeNode search(TreeNode root,int key){
        if(root == null || root.data == key){
            return root;
        }
        if(root.data<key){
            return search(root.right,key);
        }else{
            return search(root.left,key);
        }
    }
    
    
    
    public static void main(String args[]){
        BinarySearchTree bst = new BinarySearchTree();
        bst.insert(5);//        5
        bst.insert(4);//    4        9
        bst.insert(9);// 2         8
        bst.insert(2);//
        bst.insert(8);//
        if(bst.search(0) != null){
            System.out.println("Key found");
        }else{
            System.out.println("Key not found");
        }
    }
}
